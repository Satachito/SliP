( 'RED = `red` )
( 'BLUE = `blue` )
( 'ROUND = `round` )

(	{ 700 (300π) }:canvas
	:shadowColor `blue`
	:shadowBlur 15
	:save
	:globalCompositeOperation `xor`
	:translate[ 100 100 ]
	:scale[ 0.5 0.5 ]
	:transform{ 2 0 0 2 (-100) (-100) }
	:beginPath
	:moveTo[ 100 200 ]
	:lineTo[ 200 100 ]
	:lineTo[ 300 200 ]
	:arcTo[ 200 300 100 200 50 ]
	:fillStyle RED
	:fill [ `evenodd` ]
	:strokeStyle BLUE
	:lineWidth ( 2 2 )
	:miterLimit ( 2 ÷ 2 )
	:stroke[]

	:beginPath
	:moveTo{ ( 200 2 ) ( 2 100 ) }
	:lineTo{ ( 100 5 ) ( 200 ÷ 2 ) }
	:lineTo« ( 100 6 ) ( 1 200 ) »
	:lineCap `round`
	:lineJoin ROUND
	:lineWidth ( 2 5 )
	:lineDashOffset ( 2 5 )
	:lineDash{ ( 2 10 ) ( 3 10 ) }
	:stroke[]

	:restore

	:beginPath
	:rect{ 100 300 200 ( 2 100 ) }
	:stroke[]

	:beginPath
	:arc{ 500 400 100 0 (2π) }
	:stroke[]

	:beginPath
	:moveTo[ 100 600 ]
	:quadraticCurveTo{ ( 2 100 ) ( 5 100 ) ( 3 100 ) ( 6 100 ) }
	:stroke[]

	:beginPath
	:moveTo[ 400 600 ]
	:bezierCurveTo{ ( 4 100 ) 500 600 500 600 600 }
	:stroke[]


	:font ( `bold 48px serif` )
	:textBaseline ( `top` )
	:strokeText{ `Hello world` 100 ( 2 300 ) }
	:textAlign ( `right` )
	:fillText{ `Hello world` 400 ( 2 300 ) }

	:beginPath
	:ellipse{ 200 800 50 75 ( π ÷4 ) 0 ( 2π ) }
	:stroke[]
)

(	{ 700 (300π) }
	:canvas
	:rect{ 000 570 700 20 }
	:clip[]
	:filter `blur( 5px ) sepia( 1 )`
	:globalAlpha 0.5
	:font `bold 48px serif`
	:fillText{ `Hello world!` 400 600 }
	:clearRect[ 420 500 100 100 ]
	:direction `rtl`
	:fillText{ `Hello world!` 400 600 }
)

( 'ctx = { 240 240 }:canvas )
(	ctx:fillStyle
	(	ctx
		:createConicGradient{ 0 100 100 }
		:addColorStop{ 0	`red`	}
		:addColorStop{ 0.25	`orange`}
		:addColorStop{ 0.5	`yellow`}
		:addColorStop{ 0.75	`green`	}
		:addColorStop{ 1	`blue`	}
	)
)
( ctx:fillRect{ 20 20 200 200 } )

( 'ctx = { 240 140 }:canvas )
(	ctx:fillStyle
	(	ctx
		:createLinearGradient{ 20 0 220 0 }
		:addColorStop{ 0	`green`	}
		:addColorStop{ 0.5	`cyan`	}
		:addColorStop{ 1	`green`	}
	)
)
( ctx:fillRect{ 20 20 200 100 } )

( 'ctx = { 200 200 }:canvas )
(	ctx:fillStyle
	(	ctx
		:createRadialGradient{ 110 90 30 100 100 70 }
		:addColorStop{ 0	`pink`	}
		:addColorStop{ 0.9	`white`	}
		:addColorStop{ 1	`green`	}
	)
)
( ctx:fillRect{ 20 20 160 160 } )

( 'ctx = { 300 300 }:canvas
	:moveTo[ 100 100 ]
	:lineTo[ 200 100 ]
	:lineTo[ 200 200 ]
	:lineWidth 10
	:closePath
)
( ctx:isPointInPath[ 200 200 ] )
( ctx:isPointInPath[ 10 10 ] )
( ctx:isPointInStroke[ 200 200 ] )
( ctx:isPointInStroke[ 100 100 ] )
